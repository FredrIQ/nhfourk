About this document:
Last modified by Jonadab the Unsightly One, 2014-12-17

Written 2014 by Nathan Eady.

This document (i.e., this specific file, changelog-fourk.txt) is in
the public domain.

At your option, you may choose instead to treat it as being under the
NetHack General Public License.  In that case, see further details
about that license in libnethack/dat/license.

NetHack Fourk Changelog
=======================

This document describes the changes that have been made in NetHack
Fourk specifically, which are different from the upstream NetHack 4
codebase.  For changes made in NetHack 4, see instead changelog.txt

These changes are in chronological order, most recent at top.

 * Moved leprechauns into the S_IMP (lowercase i) mlet class.
   For detailed justification, see the changelog entry (834cebee),
   but in brief, they are mischevious but usually not outright
   dangerous spirit/faerie beings appearing with a physical body,
   playing pranks, meddling, occasionally making people's fortunes,
   and there is folklore associated with capturing them, all of
   which is also true of imps and tengu.  Additionally, they are
   diminutive in stature like imps and quasits.  This reduces the
   number of in-use map characters by one, which is a Good Thing.
   To distinguish, leprechauns are bright green and homonculi are
   now gray (previously, both were green).

 * Differentiated nymphs.  Wood nymphs are the lowest-level and
   slightly easier to deal with than before (notably, they are now
   slightly slower than the player); water nymphs are a little
   tougher, and mountain nymphs are now the highest-level and most
   difficult nymphs.  They do NOT grow up into each other.  However,
   water nymphs (barring fountain schenanighans, which are always a
   player's fault) and especially mountain nymphs should now start
   showing up a little later in the game than before; wood nymphs
   should start showing up around the same time as before.

 * Changed the colors of two monsters (xorns to red, acid blobs to
   yellow, matching yellow dragons).  This is a pre-emptive measure
   to reduce color conflicts later, when certain monster classes
   eventually get combined.  Might as well let users go ahead and
   get used to the new colors for these monsters now.

 * Unicorn horns are now a technically finite resource (unless you can
   cast cancellation).  What happens is, applying a non-cursed unicorn
   horn when you have a problem it can fix has a 33% chance of
   reducing its enchantment by one point, unless it is already at or
   below -3, in which case it is simply destroyed without providing
   any benefit.  Cursed unicorn horns and the "Nothing happens" case
   are unchanged.

 * The formula for the player's odds of hitting monsters has been
   adjusted significantly.  Luck and experience level are now only
   added in on a logarithmic scale (together), meaning that always
   hitting everything no matter what is (hopefully) no longer a
   foregone conclusion in the late game.  It is to be expected that
   further tweaks to this formula will be required.

 * Disabled the "network MOTD" feature, since it requires a public
   server, which Fourk currently does not have.

 * Alignment record points are no longer granted for killing most
   kinds of monsters.

 * Gaining alignment record points through sacrifice is now somewhat
   more difficult (especially for non-chaotics); although certain
   kinds of special-cased corpses are still particularly effective.

 * Alignment record now starts at 10 for lawfuls, 15 for neutrals,
   20 for chaotics.  (These numbers may get adjusted later, not sure;
   as it stands, it means chaotics don't have to improve their record
   at all to go on the quest; lawfuls must improve it by 10.)  For
   now, the role-specific differences in starting alignment have been
   evened out; this may change later, as part of role differentiation,
   but I want to get the basic balance figured out first.

 * The chance for an engraving to be successfully written exactly as
   intended, rather than in a pre-eroded form, now starts higher than
   in 3.4.3 but falls off if you write Elbereth too many times.  The
   number of times you can write Elbereth and still keep a good chance
   of writing things successfully is proportional to experience level
   and is also somewhat better for forms of engraving that use up
   resources.  Players who use Elbereth sparingly in emergencies are
   likely to notice a positive effect on its reliability (if they know
   enough not to smudge it after writing it, write one at a time,
   etc.); players who abuse Elbereth extensively will definitely
   notice that it is less reliable now.  Failure is accompanied by
   messages about your body_part(HAND) cramping up.

 * To compensate for the reduced death drops as you kill many monsters
   of the same kind (which happens in normal play for some monsters,
   particularly common ones generated in groups), the base death drop
   probability has been adjusted upward.  Thus, the first few monsters
   you kill of any given type are now more likely to leave death drops
   than before.  This needs play testing for balance, but the
   intention is that the overall number of death drops in a typical
   normal (non-farming) game should be about the same.

 * Any given type of monster becomes less likely to drop corpses and
   death drops as you kill more and more of them.  Somewhere around
   150 kills, you altogether stop getting corpses for that kind of
   monster.  This is expected to be most noticeable with puddings but
   may also be relevant for extinctionists and throne farmers.  I'd
   have made it top out at a thousand or so kills, but the kill count
   only goes up to 255, probably so it can fit in a single byte.  In
   any case, this is unlikely to be noticed in normal play except with
   large creatures such as dragons, which are no longer guaranteed to
   drop corpses every single time.

 * Updated branding, docs, build rules, and such to refer to nhfourk
   (for filenames) and NetHack Fourk (for human-readable names) where
   appropriate.  References to NetHack 4 and nethack4 have also been
   retained in many places, since that is the upstream codebase on
   which NetHack Fourk is based.
